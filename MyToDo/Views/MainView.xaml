<Window x:Class="MyToDo.Views.MainView"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MyToDo.Views" 
        xmlns:ext="clr-namespace:MyToDo.Extension"
        xmlns:prism="http://prismlibrary.com/"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" 
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        AllowsTransparency="True"
        Title="MainWindow" Height="768" Width="1280"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen">
    <materialDesign:DialogHost 
        DialogTheme="Inherit"
        Identifier="Root"
        x:Name="DialogHost"
        >
        <materialDesign:DrawerHost x:Name="drawerHost" IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <StackPanel DockPanel.Dock="Top" Margin="0,20">
                        <Image Width="50" Height="50" Source="/IMG/xm.jpg">
                            <Image.Clip>
                                <EllipseGeometry
                                    Center="25,25"
                                    RadiusX="25"
                                    RadiusY="25"/>
                            </Image.Clip>
                        </Image>
                        <TextBlock Text="{Binding UserName}" Margin="0,10"
                                   HorizontalAlignment="Center"/>
                    </StackPanel>
                    <ListBox 
                        x:Name="menuBar"
                        ItemContainerStyle="{StaticResource MylistBoxStyle}" ItemsSource="{Binding MenuBars}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding NavigateCommand}" 
                                                       CommandParameter="{Binding SelectedItem,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListBox}}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <materialDesign:PackIcon  Margin="15,0" Kind="{Binding Icon}"/>
                                    <TextBlock Text="{Binding Title}" Margin="10,0"/> 
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <materialDesign:Snackbar x:Name="Snackbar" 
                                         Panel.ZIndex="1" 
                                         MessageQueue="{materialDesign:MessageQueue}"/>
                <materialDesign:ColorZone  x:Name="ColorZone"
                                  Padding="16"
                                  materialDesign:ElevationAssist.Elevation="Dp4"
                                  DockPanel.Dock="Top"
                                  Mode="PrimaryMid">
                    <DockPanel LastChildFill="True">
                        <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                            <Button x:Name="BtnMin" Content="—" Style="{StaticResource MaterialDesignFlatMidBgButton}"/>
                            <Button x:Name="BtnMax" Content="☐" Style="{StaticResource MaterialDesignFlatMidBgButton}"/>
                            <Button x:Name="BtnClose" Content="✕" Style="{StaticResource MaterialDesignFlatMidBgButton}"/>
                        </StackPanel>
                        <materialDesign:PopupBox DockPanel.Dock="Right">
                            <materialDesign:PopupBox.ToggleContent>
                                <Image Width="30" Height="30" Source="/IMG/xm.jpg">
                                    <Image.Clip>
                                        <EllipseGeometry
                                        Center="15,15" RadiusX="15" RadiusY="15"/>
                                    </Image.Clip>
                                </Image>
                            </materialDesign:PopupBox.ToggleContent>
                            <StackPanel>
                                <!--"<Button Command="{Binding AppCenterCommand}"  Content="个人中心"/>-->
                                <Button Command="{Binding LoginOutCommand}" Content="注销当前账户"/>
                            </StackPanel>
                        </materialDesign:PopupBox>
                        <StackPanel Orientation="Horizontal" Background="Transparent">
                            <ToggleButton x:Name="MenuToggleButton"
                            AutomationProperties.Name="HamburgerToggleButton"
                            IsChecked="False"
                            Style="{StaticResource MaterialDesignHamburgerToggleButton}"/>

                            <Button Margin="24,0,0,0"
                      materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                      Command="{Binding GoBackCommand}"
                      Content="{materialDesign:PackIcon Kind=ArrowLeft,
                                                        Size=24}"
                      Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                      Style="{StaticResource MaterialDesignToolButton}"
                      ToolTip="Previous Item" Click="Button_Click" />

                            <Button Margin="16,0,0,0"
                      materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"
                      Command="{Binding GoForwardCommand}"
                      Content="{materialDesign:PackIcon Kind=ArrowRight,
                                                        Size=24}"
                      Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                      Style="{StaticResource MaterialDesignToolButton}"
                      ToolTip="Next Item" />
                            <TextBlock Margin="16,0"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               AutomationProperties.Name="Material Design In XAML Toolkit"
                               FontSize="22"
                               Text="笔记本" />
                        </StackPanel>
                    </DockPanel>
                </materialDesign:ColorZone>
                <ContentControl Grid.Row="1" Grid.Column="1" Margin="40,0" prism:RegionManager.RegionName="{x:Static ext:PrismManager.MainViewRegionName}"/>
            </Grid>
        </materialDesign:DrawerHost>
    </materialDesign:DialogHost>
</Window>
